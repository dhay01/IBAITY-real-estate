{"ast":null,"code":"var _jsxFileName = \"/Users/dhaysalih/Desktop/IBAITY-real-estate/src/components/reportForm.js\";\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportForm = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      title: '',\n      description: ''\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.title) {\n        errors.title = 'this field is Required';\n      }\n      return errors;\n    },\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      } = _ref2;\n      return (\n        /*#__PURE__*/\n        // <form onSubmit={handleSubmit}>\n        //     <input\n        //         type=\"title\"\n        //         name=\"title\"\n        //         onChange={handleChange}\n        //         onBlur={handleBlur}\n        //         value={values.title}\n        //     />\n        //     {errors.title && touched.title && errors.title}\n        //     <input\n        //         type=\"text\"\n        //         name=\"text\"\n        //         onChange={handleChange}\n        //         onBlur={handleBlur}\n        //         value={values.text}\n        //     />\n        //     {errors.text && touched.text && errors.text}\n        //     <button type=\"submit\" disabled={isSubmitting}>\n        //         Submit\n        //     </button>\n        // </form>\n        _jsxDEV(Form, {\n          name: \"contact\",\n          method: \"post\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"fullname\",\n            children: [\"Fullname\", /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"fullname\",\n              autoCorrect: \"off\",\n              autoComplete: \"name\",\n              placeholder: \"your fullname\",\n              valid: touched.fullname && !errors.fullname,\n              error: touched.fullname && errors.fullname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), errors.fullname && touched.fullname && /*#__PURE__*/_jsxDEV(StyledInlineErrorMessage, {\n            children: errors.fullname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"email\",\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              autoCapitalize: \"off\",\n              autoCorrect: \"off\",\n              autoComplete: \"email\",\n              placeholder: \"your email\",\n              valid: touched.email && !errors.email,\n              error: touched.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            children: msg => /*#__PURE__*/_jsxDEV(StyledInlineErrorMessage, {\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"submit\",\n            disabled: !isValid || isSubmitting,\n            children: isSubmitting ? `Submiting...` : `Submit`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      );\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n_c = ReportForm;\nexport default ReportForm;\nvar _c;\n$RefreshReg$(_c, \"ReportForm\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","ReportForm","title","description","values","errors","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fullname","email","msg","isValid"],"sources":["/Users/dhaysalih/Desktop/IBAITY-real-estate/src/components/reportForm.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\n\nconst ReportForm = () => (\n    <div>\n\n        <Formik\n            initialValues={{title: '', description: ''}}\n            validate={values => {\n                const errors = {};\n                if (!values.title) {\n                    errors.title = 'this field is Required';\n                }\n                return errors;\n            }}\n            onSubmit={(values, {setSubmitting}) => {\n                setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    setSubmitting(false);\n                }, 400);\n            }}\n        >\n            {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  /* and other goodies */\n              }) => (\n                // <form onSubmit={handleSubmit}>\n                //     <input\n                //         type=\"title\"\n                //         name=\"title\"\n                //         onChange={handleChange}\n                //         onBlur={handleBlur}\n                //         value={values.title}\n                //     />\n                //     {errors.title && touched.title && errors.title}\n                //     <input\n                //         type=\"text\"\n                //         name=\"text\"\n                //         onChange={handleChange}\n                //         onBlur={handleBlur}\n                //         value={values.text}\n                //     />\n                //     {errors.text && touched.text && errors.text}\n                //     <button type=\"submit\" disabled={isSubmitting}>\n                //         Submit\n                //     </button>\n                // </form>\n                <Form name=\"contact\" method=\"post\" onSubmit={handleSubmit}>\n                <Label htmlFor=\"fullname\">\n                  Fullname\n                  <Input\n                    type=\"text\"\n                    name=\"fullname\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"name\"\n                    placeholder=\"your fullname\"\n                    valid={touched.fullname && !errors.fullname}\n                    error={touched.fullname && errors.fullname}\n                  />\n                </Label>\n                {errors.fullname && touched.fullname && (\n                  <StyledInlineErrorMessage>\n                    {errors.fullname}\n                  </StyledInlineErrorMessage>\n                )}\n                <Label htmlFor=\"email\">\n                  Email\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    autoCapitalize=\"off\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"email\"\n                    placeholder=\"your email\"\n                    valid={touched.email && !errors.email}\n                    error={touched.email && errors.email}\n                  />\n                </Label>\n                <ErrorMessage name=\"email\">\n                  {msg => (\n                    <StyledInlineErrorMessage>{msg}</StyledInlineErrorMessage>\n                  )}\n                </ErrorMessage>\n                <Submit type=\"submit\" disabled={!isValid || isSubmitting}>\n                  {isSubmitting ? `Submiting...` : `Submit`}\n                </Submit>\n              </Form>\n            )}\n        </Formik>\n    </div>\n);\nexport default ReportForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}